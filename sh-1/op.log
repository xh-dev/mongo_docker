Current Mongosh Log ID:	63dcd58944d91af8a6685f1a
Connecting to:		mongodb://mongo-1.example.com:27017/?directConnection=true&tls=true&tlsCAFile=%2Fdata%2Fssl%2Fmongo-client-ca.pem&tlsCertificateKeyFile=%2Fdata%2Fssl%2Fmongo-client-key.pem&appName=mongosh+1.6.2
Using MongoDB:		6.0.4
Using Mongosh:		1.6.2

For mongosh info see: https://docs.mongodb.com/mongodb-shell/


To help improve our products, anonymous usage data is collected and sent to MongoDB periodically (https://www.mongodb.com/legal/privacy-policy).
You can opt-out by running the disableTelemetry() command.

test> ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 
test> { ok: 1 }
dbrs [direct: secondary] test> {
  set: 'dbrs',
  date: ISODate("2023-02-03T09:36:11.473Z"),
  myState: 2,
  term: Long("0"),
  syncSourceHost: '',
  syncSourceId: -1,
  heartbeatIntervalMillis: Long("2000"),
  majorityVoteCount: 2,
  writeMajorityCount: 2,
  votingMembersCount: 2,
  writableVotingMembersCount: 2,
  optimes: {
    lastCommittedOpTime: { ts: Timestamp({ t: 1675416971, i: 1 }), t: Long("-1") },
    lastCommittedWallTime: ISODate("2023-02-03T09:36:11.152Z"),
    readConcernMajorityOpTime: { ts: Timestamp({ t: 1675416971, i: 1 }), t: Long("-1") },
    appliedOpTime: { ts: Timestamp({ t: 1675416971, i: 1 }), t: Long("-1") },
    durableOpTime: { ts: Timestamp({ t: 1675416971, i: 1 }), t: Long("-1") },
    lastAppliedWallTime: ISODate("2023-02-03T09:36:11.152Z"),
    lastDurableWallTime: ISODate("2023-02-03T09:36:11.152Z")
  },
  lastStableRecoveryTimestamp: Timestamp({ t: 1675416971, i: 1 }),
  members: [
    {
      _id: 1,
      name: 'mongo-1.example.com:27017',
      health: 1,
      state: 2,
      stateStr: 'SECONDARY',
      uptime: 33,
      optime: { ts: Timestamp({ t: 1675416971, i: 1 }), t: Long("-1") },
      optimeDate: ISODate("2023-02-03T09:36:11.000Z"),
      lastAppliedWallTime: ISODate("2023-02-03T09:36:11.152Z"),
      lastDurableWallTime: ISODate("2023-02-03T09:36:11.152Z"),
      syncSourceHost: '',
      syncSourceId: -1,
      infoMessage: '',
      configVersion: 1,
      configTerm: 0,
      self: true,
      lastHeartbeatMessage: ''
    },
    {
      _id: 2,
      name: 'mongo-2.example.com:27027',
      health: 1,
      state: 0,
      stateStr: 'STARTUP',
      uptime: 0,
      optime: { ts: Timestamp({ t: 0, i: 0 }), t: Long("-1") },
      optimeDurable: { ts: Timestamp({ t: 0, i: 0 }), t: Long("-1") },
      optimeDate: ISODate("1970-01-01T00:00:00.000Z"),
      optimeDurableDate: ISODate("1970-01-01T00:00:00.000Z"),
      lastAppliedWallTime: ISODate("1970-01-01T00:00:00.000Z"),
      lastDurableWallTime: ISODate("1970-01-01T00:00:00.000Z"),
      lastHeartbeat: ISODate("2023-02-03T09:36:11.202Z"),
      lastHeartbeatRecv: ISODate("2023-02-03T09:36:11.289Z"),
      pingMs: Long("9"),
      lastHeartbeatMessage: '',
      syncSourceHost: '',
      syncSourceId: -1,
      infoMessage: '',
      configVersion: -2,
      configTerm: -1
    }
  ],
  ok: 1
}
dbrs [direct: secondary] test> Current Mongosh Log ID:	63dcd5910a5bdc971a2f22b9
Connecting to:		mongodb://mongo-1.example.com:27017/?directConnection=true&tls=true&tlsCAFile=%2Fdata%2Fssl%2Fmongo-client-ca.pem&tlsCertificateKeyFile=%2Fdata%2Fssl%2Fmongo-client-key.pem&appName=mongosh+1.6.2
Using MongoDB:		6.0.4
Using Mongosh:		1.6.2

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

dbrs [direct: secondary] test> switched to db admin
dbrs [direct: secondary] admin> Uncaught MongoServerError: not primary
dbrs [direct: secondary] admin> Uncaught MongoServerError: Authentication failed.
dbrs [direct: secondary] admin> Uncaught MongoServerError: not authorized on admin to execute command { createUser: "xeth", pwd: "xxx", roles: [ { role: "readWrite", db: "testDB" } ], lsid: { id: UUID("7c93c689-d8b8-48e4-8d23-b062f5ff52d6") }, $db: "admin" }
dbrs [direct: secondary] admin> Current Mongosh Log ID:	63dcd5b17d7faf5bea28c7df
Connecting to:		mongodb://mongo-1.example.com:27017/?directConnection=true&tls=true&tlsCAFile=%2Fdata%2Fssl%2Fmongo-client-ca.pem&tlsCertificateKeyFile=%2Fdata%2Fssl%2Fmongo-client-key.pem&appName=mongosh+1.6.2
Using MongoDB:		6.0.4
Using Mongosh:		1.6.2

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

dbrs [direct: primary] test> ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... 
dbrs [direct: primary] test> Uncaught MongoServerError: already initialized
dbrs [direct: primary] test> {
  set: 'dbrs',
  date: ISODate("2023-02-03T09:36:50.630Z"),
  myState: 1,
  term: Long("1"),
  syncSourceHost: '',
  syncSourceId: -1,
  heartbeatIntervalMillis: Long("2000"),
  majorityVoteCount: 2,
  writeMajorityCount: 2,
  votingMembersCount: 2,
  writableVotingMembersCount: 2,
  optimes: {
    lastCommittedOpTime: { ts: Timestamp({ t: 1675417001, i: 1 }), t: Long("1") },
    lastCommittedWallTime: ISODate("2023-02-03T09:36:41.716Z"),
    readConcernMajorityOpTime: { ts: Timestamp({ t: 1675417001, i: 1 }), t: Long("1") },
    appliedOpTime: { ts: Timestamp({ t: 1675417001, i: 1 }), t: Long("1") },
    durableOpTime: { ts: Timestamp({ t: 1675417001, i: 1 }), t: Long("1") },
    lastAppliedWallTime: ISODate("2023-02-03T09:36:41.716Z"),
    lastDurableWallTime: ISODate("2023-02-03T09:36:41.716Z")
  },
  lastStableRecoveryTimestamp: Timestamp({ t: 1675416971, i: 1 }),
  electionCandidateMetrics: {
    lastElectionReason: 'electionTimeout',
    lastElectionDate: ISODate("2023-02-03T09:36:21.455Z"),
    electionTerm: Long("1"),
    lastCommittedOpTimeAtElection: { ts: Timestamp({ t: 1675416971, i: 1 }), t: Long("-1") },
    lastSeenOpTimeAtElection: { ts: Timestamp({ t: 1675416971, i: 1 }), t: Long("-1") },
    numVotesNeeded: 2,
    priorityAtElection: 3,
    electionTimeoutMillis: Long("10000"),
    numCatchUpOps: Long("0"),
    newTermStartDate: ISODate("2023-02-03T09:36:21.653Z"),
    wMajorityWriteAvailabilityDate: ISODate("2023-02-03T09:36:22.989Z")
  },
  members: [
    {
      _id: 1,
      name: 'mongo-1.example.com:27017',
      health: 1,
      state: 1,
      stateStr: 'PRIMARY',
      uptime: 72,
      optime: { ts: Timestamp({ t: 1675417001, i: 1 }), t: Long("1") },
      optimeDate: ISODate("2023-02-03T09:36:41.000Z"),
      lastAppliedWallTime: ISODate("2023-02-03T09:36:41.716Z"),
      lastDurableWallTime: ISODate("2023-02-03T09:36:41.716Z"),
      syncSourceHost: '',
      syncSourceId: -1,
      infoMessage: 'Could not find member to sync from',
      electionTime: Timestamp({ t: 1675416981, i: 1 }),
      electionDate: ISODate("2023-02-03T09:36:21.000Z"),
      configVersion: 1,
      configTerm: 1,
      self: true,
      lastHeartbeatMessage: ''
    },
    {
      _id: 2,
      name: 'mongo-2.example.com:27027',
      health: 1,
      state: 2,
      stateStr: 'SECONDARY',
      uptime: 39,
      optime: { ts: Timestamp({ t: 1675417001, i: 1 }), t: Long("1") },
      optimeDurable: { ts: Timestamp({ t: 1675417001, i: 1 }), t: Long("1") },
      optimeDate: ISODate("2023-02-03T09:36:41.000Z"),
      optimeDurableDate: ISODate("2023-02-03T09:36:41.000Z"),
      lastAppliedWallTime: ISODate("2023-02-03T09:36:41.716Z"),
      lastDurableWallTime: ISODate("2023-02-03T09:36:41.716Z"),
      lastHeartbeat: ISODate("2023-02-03T09:36:49.542Z"),
      lastHeartbeatRecv: ISODate("2023-02-03T09:36:49.040Z"),
      pingMs: Long("0"),
      lastHeartbeatMessage: '',
      syncSourceHost: 'mongo-1.example.com:27017',
      syncSourceId: 1,
      infoMessage: '',
      configVersion: 1,
      configTerm: 1
    }
  ],
  ok: 1,
  '$clusterTime': {
    clusterTime: Timestamp({ t: 1675417001, i: 1 }),
    signature: {
      hash: Binary(Buffer.from("3d5c7ece6940322b94e25ce6bb7b8db07197a920", "hex"), 0),
      keyId: Long("7195861140558053381")
    }
  },
  operationTime: Timestamp({ t: 1675417001, i: 1 })
}
dbrs [direct: primary] test> Current Mongosh Log ID:	63dcd5b4473a48cbbc214b4d
Connecting to:		mongodb://mongo-1.example.com:27017/?directConnection=true&tls=true&tlsCAFile=%2Fdata%2Fssl%2Fmongo-client-ca.pem&tlsCertificateKeyFile=%2Fdata%2Fssl%2Fmongo-client-key.pem&appName=mongosh+1.6.2
Using MongoDB:		6.0.4
Using Mongosh:		1.6.2

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

dbrs [direct: primary] test> switched to db admin
dbrs [direct: primary] admin> {
  ok: 1,
  '$clusterTime': {
    clusterTime: Timestamp({ t: 1675417013, i: 4 }),
    signature: {
      hash: Binary(Buffer.from("7c78aa060e06a07a7a242df55973d7702ef7196f", "hex"), 0),
      keyId: Long("7195861140558053381")
    }
  },
  operationTime: Timestamp({ t: 1675417013, i: 4 })
}
dbrs [direct: primary] admin> { ok: 1 }
dbrs [direct: primary] admin> {
  ok: 1,
  '$clusterTime': {
    clusterTime: Timestamp({ t: 1675417013, i: 5 }),
    signature: {
      hash: Binary(Buffer.from("7c78aa060e06a07a7a242df55973d7702ef7196f", "hex"), 0),
      keyId: Long("7195861140558053381")
    }
  },
  operationTime: Timestamp({ t: 1675417013, i: 5 })
}
dbrs [direct: primary] admin> 